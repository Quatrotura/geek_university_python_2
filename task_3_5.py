# 5. Реализовать функцию get_jokes(), возвращающую n шуток,
# сформированных из трех случайных слов, взятых из трёх списков
# (по одному из каждого):
# nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
# adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью"]
# adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]

#         Например:
# >>> get_jokes(2)
# ["лес завтра зеленый", "город вчера веселый"]

# Документировать код функции.
# Сможете ли вы добавить еще один аргумент — флаг,
# разрешающий или запрещающий повторы слов в шутках
# (когда каждое слово можно использовать только в одной шутке)?
# Сможете ли вы сделать аргументы именованными?

# вызываем функцию choice() из библиотеки random
from random import choice

# создаем словари со значениями
nouns = ["автомобиль", "лес", "огонь", "город", "дом"]
adverbs = ["сегодня", "вчера", "завтра", "позавчера", "ночью"]
adjectives = ["веселый", "яркий", "зеленый", "утопичный", "мягкий"]

# создаем функцию, прописываем аргументы:
# jokes_qty = 1 - количество шуток, can_repeat = True (флажок) - можно повторять одни и те же слова в разных шутках
def get_jokes(jokes_qty = 1, can_repeat = True):
    jokes_list = []

    if can_repeat == True:                                                                  # проверка на установленный флажок. True - слова могут повторяться в шутках
        for i in range(jokes_qty):                                                          # запускаем цикл на то количество итераций = переданному функции аргументу jokes_qty
            joke = choice(nouns), choice(adverbs), choice(adjectives)                       # записывем рандомные слова из каждого массива в кортеж
            jokes_list.append(" ".join(joke))                                               # записываем полученные сочетания в список где пробел - разделитель слов
        return jokes_list                                                                   # возврат списка с шутками, конец работы функции
    else:                                                                                   # проверка на установленный флажок. False - слова не могут повторяться в шутках
        for i in range(jokes_qty):
            if len(nouns) > 0:                                                              # обработка массива с проставленным флажком удаляет выбранные слова из соответствующих массивов
                                                                                            # поэтому условия ветвления - длина массива больше 0
                joke = n, adv, adj = [choice(nouns), choice(adverbs), choice(adjectives)]   # записывем рандомные слова из каждого массива в кортеж и паралелльным присваиванием в отдельные переменные
                nouns.remove(n)                                                             # удаляем выбранное слово из nouns
                adverbs.remove(adv)                                                         # удаляем выбранное слово из adverbs
                adjectives.remove(adj)                                                      # удаляем выбранное слово из adjectives
                jokes_list.append(" ".join(joke))                                           # записываем полученные сочетания в список где пробел - разделитель слов
            else:
                print ('Только 5 шуток можно. Шутки кончились. Поменяй флажок на True.')    # сообщение когда все слова использовались
                return jokes_list                                                           # возврат списка с шутками, конец работы функции
        return jokes_list

print(get_jokes(8, False))